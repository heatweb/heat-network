[
    {
        "id": "92f553e0.da738",
        "type": "tab",
        "label": "Protocol",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b095e9a4.bd4198",
        "type": "inject",
        "z": "92f553e0.da738",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 190,
        "y": 120,
        "wires": [
            [
                "66037535.22d464"
            ]
        ]
    },
    {
        "id": "463b9706.f21af",
        "type": "debug",
        "z": "92f553e0.da738",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 810,
        "y": 120,
        "wires": []
    },
    {
        "id": "66037535.22d464",
        "type": "http request",
        "z": "92f553e0.da738",
        "name": "default_topics.json",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/heatweb/heat-network/master/devices/default_topics.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 390,
        "y": 120,
        "wires": [
            [
                "1a105c9c.7af87b"
            ]
        ],
        "info": "Fetches default device protocol data from GitHub"
    },
    {
        "id": "1a105c9c.7af87b",
        "type": "change",
        "z": "92f553e0.da738",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topics",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 120,
        "wires": [
            [
                "463b9706.f21af"
            ]
        ]
    },
    {
        "id": "faff641e.4bbf58",
        "type": "inject",
        "z": "92f553e0.da738",
        "name": "GENERATE DUMMY DATA",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 240,
        "y": 660,
        "wires": [
            [
                "47541c98.46a8bc"
            ]
        ]
    },
    {
        "id": "47541c98.46a8bc",
        "type": "random",
        "z": "92f553e0.da738",
        "name": "",
        "low": "1",
        "high": "100",
        "inte": "true",
        "property": "payload",
        "x": 440,
        "y": 660,
        "wires": [
            [
                "9e4df653.bdabc"
            ]
        ]
    },
    {
        "id": "9e4df653.bdabc",
        "type": "mqtt out",
        "z": "92f553e0.da738",
        "name": "",
        "topic": "testHeatNetwork/protocolScript/substation1/dat/tH",
        "qos": "0",
        "retain": "false",
        "broker": "15057af5.972105",
        "x": 730,
        "y": 660,
        "wires": []
    },
    {
        "id": "7199e352.7fca54",
        "type": "mqtt in",
        "z": "92f553e0.da738",
        "name": "",
        "topic": "testHeatNetwork/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "15057af5.972105",
        "x": 190,
        "y": 300,
        "wires": [
            [
                "77f10f0a.3fafc",
                "a00d906c.7b929"
            ]
        ]
    },
    {
        "id": "77f10f0a.3fafc",
        "type": "debug",
        "z": "92f553e0.da738",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 298,
        "y": 350,
        "wires": []
    },
    {
        "id": "a00d906c.7b929",
        "type": "function",
        "z": "92f553e0.da738",
        "name": "parse MQTT",
        "func": "msg.networkId = msg.topic.split(\"/\")[0];\nmsg.nodeId = msg.topic.split(\"/\")[1];\nmsg.deviceId = msg.topic.split(\"/\")[2];\nmsg.dataType = msg.topic.split(\"/\")[3];\nmsg.dataKey = msg.topic.split(\"/\")[4];\nmsg.deviceType = msg.deviceId.replace(/[0-9]/i,\"\");\n\nvar defaultTopics = global.get(\"topics.default\") || {};\nvar devTopics =  global.get(\"topics.\"+msg.deviceType) || {};\nvar typeData = defaultTopics[msg.dataType] || {};\nvar keyData = typeData[msg.dataKey] || {};\n\nmsg.title = keyData[\"title\"] || msg.dataKey;\nmsg.units = keyData[\"units\"] || \"\";\n\nmsg.payload = msg.title + \" is \" + msg.payload + msg.units + \" on \" + msg.deviceId;\n\n\nif (global.get(\"topics.\" + msg.deviceType)) { return [msg,null]; }\n\nmsg2={};\nmsg2.url = \"https://raw.githubusercontent.com/heatweb/heat-network/master/devices/\" +  msg.deviceType + \"/\" +  msg.deviceType + \"_topics.json\"\n\nmsg2.topic = msg.deviceType;\nmsg2.payload = msg.deviceType;\n\nreturn [msg,msg2]; ",
        "outputs": 2,
        "noerr": 0,
        "x": 490,
        "y": 300,
        "wires": [
            [
                "59a2d43a.946444"
            ],
            [
                "f4b9c703.fb2ba"
            ]
        ]
    },
    {
        "id": "59a2d43a.946444",
        "type": "debug",
        "z": "92f553e0.da738",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 690,
        "y": 300,
        "wires": []
    },
    {
        "id": "9e76a15d.1def78",
        "type": "http request",
        "z": "92f553e0.da738",
        "name": "GitHub",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 810,
        "y": 400,
        "wires": [
            [
                "c988be5e.cadde8"
            ]
        ],
        "info": "Fetches default device protocol data from GitHub"
    },
    {
        "id": "45f4e9f.d4e2c98",
        "type": "debug",
        "z": "92f553e0.da738",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1070,
        "y": 400,
        "wires": []
    },
    {
        "id": "b279f074.51ced",
        "type": "inject",
        "z": "92f553e0.da738",
        "name": "GENERATE DUMMY DATA",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 230,
        "y": 720,
        "wires": [
            [
                "64223da3.9a04bc"
            ]
        ]
    },
    {
        "id": "64223da3.9a04bc",
        "type": "random",
        "z": "92f553e0.da738",
        "name": "",
        "low": "1",
        "high": "100",
        "inte": "true",
        "property": "payload",
        "x": 440,
        "y": 720,
        "wires": [
            [
                "eb70a6e1.8bccd8"
            ]
        ]
    },
    {
        "id": "eb70a6e1.8bccd8",
        "type": "mqtt out",
        "z": "92f553e0.da738",
        "name": "",
        "topic": "testHeatNetwork/protocolScript/hiu23456/dat/tC",
        "qos": "0",
        "retain": "false",
        "broker": "15057af5.972105",
        "x": 720,
        "y": 720,
        "wires": []
    },
    {
        "id": "c988be5e.cadde8",
        "type": "function",
        "z": "92f553e0.da738",
        "name": "",
        "func": "function isObject(item) {\n  return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\n\nfunction mergeDeep(target, ...sources) {\n  if (!sources.length) return target;\n  const source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources);\n}\n\nvar defaultTopics = global.get(\"topics\") || {};\nvar devTopics =  msg.payload;\n\nmsg.payload = mergeDeep(defaultTopics,devTopics);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 400,
        "wires": [
            [
                "45f4e9f.d4e2c98"
            ]
        ]
    },
    {
        "id": "78c38fcd.45fc1",
        "type": "comment",
        "z": "92f553e0.da738",
        "name": "This is run once at start to fetch the default topic info from GitHub",
        "info": "",
        "x": 320,
        "y": 60,
        "wires": []
    },
    {
        "id": "639a6001.3275b",
        "type": "comment",
        "z": "92f553e0.da738",
        "name": "This section deals with incoming mqtt messages, and fetches additional data from GitHub.",
        "info": "",
        "x": 390,
        "y": 240,
        "wires": []
    },
    {
        "id": "dd8e58fe.37fe08",
        "type": "comment",
        "z": "92f553e0.da738",
        "name": "This section generates dummy data for testing.",
        "info": "",
        "x": 260,
        "y": 600,
        "wires": []
    },
    {
        "id": "622d22e0.cf936c",
        "type": "mqtt in",
        "z": "92f553e0.da738",
        "name": "",
        "topic": "testHeatNetwork/+/+/system/deviceVersion",
        "qos": "0",
        "datatype": "auto",
        "broker": "15057af5.972105",
        "x": 260,
        "y": 400,
        "wires": [
            [
                "49ce37e4.642c4"
            ]
        ]
    },
    {
        "id": "49ce37e4.642c4",
        "type": "function",
        "z": "92f553e0.da738",
        "name": "parse MQTT",
        "func": "\n\nmsg.deviceVersion = msg.payload;\n\nif (global.get(\"topics.\" + msg.deviceVersion)) { return [msg,null]; }\n\nmsg.url = \"https://raw.githubusercontent.com/heatweb/heat-network/master/devices/versions/\" +  msg.deviceVersion  + \"/\" +  msg.deviceVersion + \"_topics.json\"\n\nmsg.topic = msg.deviceVersion;\nmsg.payload = msg.deviceVersion;\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 400,
        "wires": [
            [
                "f4b9c703.fb2ba"
            ]
        ]
    },
    {
        "id": "7098e53e.864174",
        "type": "inject",
        "z": "92f553e0.da738",
        "name": "substation2PDA",
        "topic": "",
        "payload": "substation2PDA",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 200,
        "y": 780,
        "wires": [
            [
                "3328e7c4.10fec"
            ]
        ]
    },
    {
        "id": "3328e7c4.10fec",
        "type": "mqtt out",
        "z": "92f553e0.da738",
        "name": "",
        "topic": "testHeatNetwork/protocolScript/substation1/system/deviceVersion",
        "qos": "0",
        "retain": "false",
        "broker": "15057af5.972105",
        "x": 780,
        "y": 780,
        "wires": []
    },
    {
        "id": "f4b9c703.fb2ba",
        "type": "rbe",
        "z": "92f553e0.da738",
        "name": "once",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 690,
        "y": 400,
        "wires": [
            [
                "9e76a15d.1def78"
            ]
        ]
    },
    {
        "id": "7128eb9.bf1d394",
        "type": "inject",
        "z": "92f553e0.da738",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 697,
        "y": 494,
        "wires": [
            [
                "8413c466.5f413"
            ]
        ]
    },
    {
        "id": "8413c466.5f413",
        "type": "change",
        "z": "92f553e0.da738",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 717,
        "y": 454,
        "wires": [
            [
                "f4b9c703.fb2ba"
            ]
        ]
    },
    {
        "id": "15057af5.972105",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    }
]
